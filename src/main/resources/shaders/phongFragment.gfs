#version 330

#include "lighting.gh"

const int MAX_POINT_LIGHT = 4;
const int MAX_SPOT_LIGHT = 4;

in vec2 texCoord0;
in vec3 normal0;
in vec3 worldPos0;

out vec4 fragColor;

uniform vec3 baseColor;
uniform vec3 ambientLight;
uniform sampler2D sampler;


uniform DirectionalLight directionalLight;
uniform PointLight pointLights[MAX_POINT_LIGHT];
uniform SpotLight spotLights[MAX_SPOT_LIGHT];

void main()
{
    vec4 totalLight = vec4(ambientLight, 1);
    vec4 wirecolor = vec4(baseColor, 1);
    vec4 textureColor = texture(sampler, texCoord0.xy);

    if (textureColor != vec4(0,0,0,0)) {
        wirecolor *= textureColor;
    }

    vec3 normal = normalize(normal0);

    totalLight += calcDirectionalLight(directionalLight, normal, worldPos0);

    for (int i = 0; i < MAX_POINT_LIGHT; i++) {
        if (pointLights[i].base.intensity > 0) {
    	    totalLight += calcPointLight(pointLights[i], normal, worldPos0);
    	}
    }

    for (int i = 0; i < MAX_SPOT_LIGHT; i++) {
        if (spotLights[i].pointLight.base.intensity > 0) {
    	    totalLight += calcSpotLight(spotLights[i], normal, worldPos0);
    	}
    }

    fragColor = wirecolor * totalLight;
}
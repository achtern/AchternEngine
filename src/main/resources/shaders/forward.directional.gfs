#version 330

#include "lighting.gfh"

float SampleShadowMap(sampler2D map, vec2 coords, float diff)
{
    return step(diff, texture(map, coords.xy).r);
}

float CalcShadowEffect(sampler2D map, vec4 initCoords)
{
    vec3 coord = (initCoords.xyz / initCoords.w) * vec3(0.5) + vec3(0.5);

    return SampleShadowMap(map, coord.xy, coord.z);
}

uniform DirectionalLight directionalLight;

vec4 CalcLightEffect(vec3 normal, vec3 worldPos)
{
    vec4 lightAmount = CalcDirectionalLight(directionalLight, normal, worldPos); //* vec4(CalcShadowEffect(shadowMap, shadowMapCoords0));
    return lightAmount;
}

#include "lighting-main.gfh"
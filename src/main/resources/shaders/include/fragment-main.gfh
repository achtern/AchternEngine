#import "fog.glib"

uniform Fog fog;

void main()
{

    vec3 eyeDir = normalize(eyePos - worldPos0);

    vec2 texCoords = texCoord0.xy + (eyeDir * tbnMatrix).xy *
        (texture(displacementMap, texCoord0.xy).r * displacementAmount + displacementOffset);

    // We use 255/128 instead of just 2 here, because RGB values can range from 0 to 255,
    // making it impossible to have perfect 127.5 values, this way it gets rounded up, and we can
    // normals of the value 0.
    vec3 normal = normalize(tbnMatrix * (255.0/128.0 * texture(normalMap, texCoords.xy).xyz - 1));

    vec4 c = color
            * texture(diffuse, texCoords.xy);

    if (receiveLight == 0) {
        c = c * CalcLightEffect(normal, worldPos0);
    } else {
        c = vec4(0);
    }

    float fogCoord = abs(position0.z/position0.w);

    if (receiveFog == 0) {
        fragColor = mix(c, fog.color, getFogFactor(fog, fogCoord));
    } else {
        fragColor = c;
    }

}
